services:
  model-create:
    # creates a MLFlow model, and changes "deploy" model tag periodically
    build:
      context: ./model-create
      dockerfile: Dockerfile
    container_name: model-create
    environment:
      - DEPLOYMENT_STATUS_CYCLE_TIME=10
    depends_on:
      - mlflow
      - webhook-listener

  mlflow:
    image: ghcr.io/mlflow/mlflow:v3.4.0
    container_name: mlflow-server

    ports:
      - "5000:5000"

    environment:
      - MLFLOW_WEBHOOK_SECRET_ENCRYPTION_KEY=Sl7KScz-C0S93maHQMegj4qCwNtPz7_hDqnuWm4zKGU=
      - REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt

    # This entrypoint runs a short script before executing the original command.
    # It updates the certificate store and then uses 'exec "$@"' to run
    # the 'command' defined below.
    entrypoint: |
      sh -c '
        echo "Updating CA certificates..."
        update-ca-certificates
        echo "Executing original command..."
        exec "$@"
      ' _

    command:
      - mlflow
      - server
      - --backend-store-uri=sqlite:///mlflow/mlflow.db
      - --artifacts-destination=/mlflow/artifacts
      - --serve-artifacts
      - --host=0.0.0.0
      - --port=5000

    volumes:
      - ./mlflow-data:/mlflow
      # Mount your local certificate into the container's trust store.
      # It must be renamed with a .crt extension.
      - ${MKCERT_CAROOT:-~/.local/share/mkcert}/rootCA.pem:/usr/local/share/ca-certificates/custom-ca.crt:ro

  webhook-listener:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: webhook-listener
    ports:
      - "18347:8000"
    environment:
      # MLflow configuration
      - MLFLOW_KSERVE_MLFLOW_TRACKING_URI=http://mlflow:5000
      - MLFLOW_KSERVE_MLFLOW_WEBHOOK_SECRET=Sl7KScz-C0S93maHQMegj4qCwNtPz7_hDqnuWm4zKGU=
      - MLFLOW_KSERVE_MLFLOW_WEBHOOK_URL=https://webhook-listener:8000/webhook
      - MLFLOW_KSERVE_MLFLOW_WEBHOOK_NAME=mlflow-kserve-webhook
      # SSL/TLS configuration
      - MLFLOW_KSERVE_SSL_CERTFILE=/app/localhost-cert.pem
      - MLFLOW_KSERVE_SSL_KEYFILE=/app/localhost-key.pem
      # Kubernetes configuration (not used in docker-compose, but required by config)
      - MLFLOW_KSERVE_KUBE_NAMESPACE=kserve-mlflow-models
      - MLFLOW_KSERVE_KUBE_IN_CLUSTER=false
      # Storage configuration
      - MLFLOW_KSERVE_STORAGE_URI_BASE=file:///mlflow/artifacts
      # Logging
      - MLFLOW_KSERVE_LOG_LEVEL=DEBUG
    volumes:
      - ./localhost-key.pem:/app/localhost-key.pem:ro
      - ./localhost-cert.pem:/app/localhost-cert.pem:ro
    depends_on:
      - mlflow
